upstream grafana_backend {
   server metrics.ov.ffmuc.net:3000;
   keepalive 32;
}

proxy_cache_path /var/cache/nginx/grafana_render keys_zone=grafana_render:1024m inactive=1d;
proxy_cache_path /var/cache/nginx/grafana_datasources keys_zone=grafana_datasources:100m inactive=1h;

server {
    listen 80;
    listen [::]:80;
    listen {{ sslPort }} ssl;
    listen [::]:{{ sslPort }} ssl;

    ssl_certificate     /etc/letsencrypt/live/ffmuc.net/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/ffmuc.net/privkey.pem;

    server_name stats.ffmuc.net graphs.ext.ffmuc.net;

    # Force HTTPS connection. This rules is domain agnostic
    if ($scheme != "https") {
       return 301 https://$host$request_uri;
    }

    # /api/datasources/proxy/1/query?db=ffmuc_other&q=SELECT%20mean(%22participants%22)%20[...]%20fill(none)&epoch=ms
    location ~ ^/api/datasources/proxy/([0-9]+)/query$ {
        proxy_pass         https://grafana_backend;
        proxy_redirect     off;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Host $server_name;

        proxy_cache grafana_datasources;
        proxy_cache_key $1$args;
        proxy_cache_revalidate on;
        proxy_cache_min_uses 1;
        proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504 http_404 http_429;
        proxy_cache_background_update off;
        proxy_cache_valid 200 10s;
        proxy_cache_lock on;
        # in case influxdb is overloaded accept up to 1m delay
        proxy_cache_lock_age 1m;
        proxy_cache_lock_timeout 1m;
        proxy_ignore_headers Cache-Control expires;

        # disable compression upstream to enforce nginx to compress (for brotli usage)
        proxy_set_header   Accept-Encoding "identity";
        add_header X-Cache-Status $upstream_cache_status;
    }

    location /render/ {
        proxy_pass         https://grafana_backend;
        proxy_redirect     off;

        add_header X-Cache-Status $upstream_cache_status;
        proxy_cache grafana_render;
        proxy_cache_revalidate on;
        proxy_cache_min_uses 3;
        proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;
        proxy_cache_background_update on;
        proxy_cache_valid 200 1m;
        proxy_ignore_headers Cache-Control expires;

        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Host $server_name;
    }

    location / {
        proxy_pass         https://grafana_backend;
        proxy_redirect     off;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Host $server_name;

        # disable compression upstream to enforce sending brotli if client allows it
        proxy_set_header   Accept-Encoding "identity";
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }

    access_log /var/log/nginx/{{ domain }}_access.log json_normal;
    error_log  /var/log/nginx/{{ domain }}_error.log;
}
