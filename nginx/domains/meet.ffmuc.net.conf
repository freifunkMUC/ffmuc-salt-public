upstream prosody_upstream {
    hash $arg_room consistent;
    server 127.0.0.1:5280;
}
map $arg_room $upstream {
    default prosody_upstream;
    '~_shard0' 10.111.0.1:5280;
    '~_shard1' 10.111.0.100:5280;
    '~_shard2' 10.111.0.101:5280;
    '~_shard3' 10.111.0.102:5280;
    '~_shard4' 10.111.0.103:5280;
}
server {
    listen 80;
    listen [::]:80;
    server_name meet.ffmuc.net meet-test.ffmuc.net www.meet.ffmuc.net ffmeet.de ffmeet.net;
    return 301 https://$host$request_uri;
}
server {
    listen 80;
    listen [::]:80;
    server_name *.ffmeet.net;
    return 301 https://meet.ffmuc.net$request_uri;
}
server {
    listen {{ sslPort }} ssl;
    listen [::]:{{ sslPort }} ssl;
    server_name meet.ffmuc.net meet-test.ffmuc.net ffmeet.de *.ffmeet.de ffmeet.net *.ffmeet.net klassenkonferenz.de;

    add_header Strict-Transport-Security "max-age=31536000";
    add_header X-Jitsi-Shard "shard1" always;

    ssl_certificate     /etc/letsencrypt/live/meet.ffmuc.net/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/meet.ffmuc.net/privkey.pem;

    root /usr/share/jitsi-meet;
    ssi on;
    index index.html index.htm;
    error_page 404 /static/404.html;

    real_ip_header CF-Connecting-IP;

    location = /config.js {
        #alias /etc/jitsi/meet/$host-config.js;
        alias /etc/jitsi/meet/meet.ffmuc.net-config.js;
    }
    location = /numbers.json {
        alias /etc/jitsi/meet/numbers.json;
    }

    location = /external_api.js {
        alias /usr/share/jitsi-meet/libs/external_api.min.js;
    }

    #ensure all static content can always be found first
    location ~ ^/(libs|css|static|images|fonts|lang|sounds|connection_optimization|.well-known)/(.*)$
    {
        add_header 'Access-Control-Allow-Origin' '*';
        alias /usr/share/jitsi-meet/$1/$2;
        access_log off;
    }

    # Enable websockets to bridges
    location ~ ^/colibri-ws/jvb([0-9]+)/(.*) {
        proxy_pass              http://jvb$1.int.meet.ffmuc.net:9090/colibri-ws/jvb$1/$2$is_args$args;
        proxy_http_version      1.1;
        proxy_set_header        Upgrade $http_upgrade;
        proxy_set_header        Connection "Upgrade";
        tcp_nodelay             on;
        proxy_read_timeout      900s;
        proxy_connect_timeout   900s;
        proxy_send_timeout      900s;
        send_timeout            900s;
    }

    # BOSH
    location = /http-bind {
        proxy_pass              http://$upstream/http-bind?prefix=$prefix&$args;
        proxy_set_header        X-Forwarded-For $remote_addr;
        proxy_set_header        Host $http_host;
        tcp_nodelay             on;
        proxy_http_version      1.1;
        proxy_connect_timeout   300;
        proxy_send_timeout      300;
        proxy_read_timeout      300;
        send_timeout            300;
    }

    # xmpp websockets
    location = /xmpp-websocket {
        proxy_pass              http://$upstream/xmpp-websocket?prefix=$prefix&$args;
        proxy_set_header        Upgrade $http_upgrade;
        proxy_set_header        Connection "Upgrade";
        proxy_set_header        Host $http_host;
        proxy_socket_keepalive  on;
        tcp_nodelay             on;
        proxy_http_version      1.1;
        proxy_read_timeout      900s;
        proxy_connect_timeout   900s;
        proxy_send_timeout      900s;
        send_timeout            900s;
    }

    location ^~ /conferenceMapper {
        proxy_pass https://conferencemapper.ffmuc.net;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Frame-Options SAMEORIGIN;
    }

    # websockets for subdomains
    location ~ ^/([^/?&:'"]+)/xmpp-websocket {
        set $subdomain "$1.";
        set $subdir "$1/";
        set $prefix "$1";

        rewrite ^/(.*)$ /xmpp-websocket;
    }
    location ~ ^/([^/?&:'"]+)/http-bind {
        set $subdomain "$1.";
        set $subdir "$1/";
        set $prefix "$1";

        rewrite ^/(.*)$ /http-bind;
    }

    location ~ ^/([^/?&:"']+)$ {
        try_files $uri @root_path;
    }

    location @root_path {
        rewrite ^/(.*)$ / break;
    }

    location /pad/ {
        proxy_pass              https://ffmuc.net/pad/;
        proxy_redirect          off;
        proxy_set_header        Host "ffmuc.net";
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Host $server_name;
        proxy_set_header        X-Forwarded-Proto $scheme;
        proxy_set_header        Upgrade $http_upgrade;
        proxy_set_header        Connection "Upgrade";
        proxy_ssl_server_name   on;
        client_max_body_size    200M;
        proxy_http_version      1.1;
        proxy_request_buffering off;
    }

    if ($host = www.meet.ffmuc.net) {
       return 301 https://meet.ffmuc.net$request_uri;
    }
}
