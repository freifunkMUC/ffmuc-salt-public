{%- set own_location = salt['pillar.get']('netbox:site:name') %}
upstream speed_frontend_upstream {
   {%- if own_location == "VIE01" %}
   server docker05.in.ffmuc.net:80;
   {%- else %}
   server docker07.in.ffmuc.net:80;
   {%- endif %}
}

server {
   listen 80;
   listen [::]:80;
   listen 443 ssl;
   listen [::]:443 ssl;
   server_name speed.ffmuc.net speed-muc.ffmuc.net speed-vie.ffmuc.net speed4.ffmuc.net speed6.ffmuc.net speedtest.ffmuc.net;
   gzip off; 
        tcp_nodelay on;
        tcp_nopush on;
        sendfile on;
        open_file_cache max=200000 inactive=20s;
        open_file_cache_valid 30s;
        open_file_cache_min_uses 2;
        open_file_cache_errors off;

      proxy_http_version 1.1;
   # Force HTTPS connection. This rules is domain agnostic
   if ($scheme != "https") {
      rewrite ^ https://$host$uri permanent;
   }

   location / {
      proxy_pass         http://speed_frontend_upstream;
      proxy_redirect     off;
      proxy_set_header   Host speed.ffmuc.net;
      proxy_set_header   X-Real-IP $remote_addr;
      proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header   X-Forwarded-Host $server_name;
      proxy_set_header        Upgrade                         $http_upgrade;
      proxy_set_header        Connection                      $connection_upgrade;
      proxy_cache        off;
      client_max_body_size 10000M;
      proxy_http_version 1.1;
      proxy_request_buffering off;

            add_header Cache-Control 'no-store, no-cache, max-age=0, no-transform';

         add_header Last-Modified $date_gmt;
                if_modified_since off;
                expires off;
                etag off;
   }
   location = /dev-null {
   return 200;
      client_max_body_size 10000M;
   }
   location = /upload {
      client_max_body_size 10000M;
   proxy_pass http://speed.ffmuc.net:80/dev-null;
   }
  ssl_certificate     /etc/letsencrypt/live/ffmuc.net/fullchain.pem;
   ssl_certificate_key /etc/letsencrypt/live/ffmuc.net/privkey.pem;
   
   access_log /var/log/nginx/{{ domain }}_access.log json_normal;
   error_log  /var/log/nginx/{{ domain }}_error.log;
}
