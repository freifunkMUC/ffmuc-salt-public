upstream byro_upstream {
    server docker06.ov.ffmuc.net:8345;
}
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name verein.fnmuc.net verein.ffmuc.net byro.ffmuc.net;

    # Force HTTPS connection. This rules is domain agnostic
    if ($scheme != "https") {
        rewrite ^ https://$host$uri permanent;
    }

    location = /.well-known/carddav { return 301 $scheme://$host/remote.php/dav; }
    location = /.well-known/caldav  { return 301 $scheme://$host/remote.php/dav; }

    add_header Strict-Transport-Security "max-age=15768000; includeSubdomains; preload;";
    add_header X-Frame-Options "SAMEORIGIN";

    client_max_body_size 2048M;
    location / {
        proxy_pass         http://byro_upstream;
        proxy_redirect     off;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Host $server_name;
	proxy_read_timeout 300;
	proxy_connect_timeout 300;
	proxy_send_timeout 300; 
    }
    location /media/ {
        proxy_pass         http://byro_upstream;
        proxy_redirect     off;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Host $server_name;
    }
    location /static/ {
        proxy_pass         http://byro_upstream;
        proxy_redirect     off;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Host $server_name;
    }

    ssl_certificate     /etc/letsencrypt/live/ffmuc.net/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/ffmuc.net/privkey.pem;

    access_log /var/log/nginx/{{ domain }}_access.log json_normal;
    error_log  /var/log/nginx/{{ domain }}_error.log;
}

server {
    if ($host = verein.fnmuc.net) {
        return 301 https://$host$request_uri;
    }
    if ($host = verein.ffmuc.net) {
        return 301 https://$host$request_uri;
    }
    if ($host = byro.ffmuc.net) {
        return 301 https://$host$request_uri;
    }

    listen 80;
    listen [::]:80;
    server_name verein.fnmuc.net verein.ffmuc.net byro.ffmuc.net;
    return 404;
}
