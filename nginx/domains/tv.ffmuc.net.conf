upstream tv_backend {
   server docker04.ov.ffmuc.net:443;
   keepalive 32;
}

proxy_cache_path /var/cache/nginx-tv levels=1:2 keys_zone=tv_cache:10m max_size=3g inactive=1h use_temp_path=off;

server {
    listen 80;
    listen [::]:80;
    listen {{ sslPort }} ssl;
    listen [::]:{{ sslPort }} ssl;

    ssl_certificate     /etc/letsencrypt/live/ffmuc.net/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/ffmuc.net/privkey.pem;

    server_name tv.ffmuc.net;

    root /srv/www/{{ domain }};

    location / {
        proxy_set_header Host "tv.ov.ffmuc.net";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Frame-Options SAMEORIGIN;

        proxy_http_version 1.1;
        proxy_pass https://tv_backend;
        proxy_cache tv_cache;
        proxy_cache_revalidate on;
        proxy_cache_use_stale timeout;
        proxy_cache_lock on;
    }

    location /entry {
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        client_max_body_size 50M;
        proxy_set_header Host "tv.ov.ffmuc.net";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Frame-Options SAMEORIGIN;
        proxy_buffers 256 16k;
        proxy_buffer_size 16k;
        client_body_timeout 60;
        send_timeout 300;
        lingering_timeout 5;
        proxy_connect_timeout 90;
        proxy_send_timeout 300;
        proxy_read_timeout 90s;
        proxy_pass https://tv_backend;
    }

    if ($scheme = http) {
        return 301 https://$host$request_uri;
    }

    access_log /var/log/nginx/{{ domain }}_access.log json_normal;
    error_log  /var/log/nginx/{{ domain }}_error.log;
}
