upstream cryptpad_upstream {
   server docker05.ov.ffmuc.net:8011;
}

server {
   listen 80;
   listen [::]:80;
   listen 443 ssl;
   listen [::]:443 ssl;
   server_name cryptpad.ffmuc.net cryptpad-sb.ffmuc.net;
   # Force HTTPS connection. This rules is domain agnostic
   if ($scheme != "https") {
      rewrite ^ https://$host$uri permanent;
   }
   
   set $main_domain "cryptpad.ffmuc.net";
   set $sandbox_domain "cryptpad-sb.ffmuc.net";

   set $api_domain "cryptpad.ffmuc.net";
   set $files_domain "cryptpad.ffmuc.net";
   add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
   add_header X-XSS-Protection "1; mode=block";
   add_header X-Content-Type-Options nosniff;
   add_header Access-Control-Allow-Origin "*";
   
   set $coop '';
   if ($uri ~ ^\/sheet\/.*$) { set $coop 'same-origin'; }

   add_header Cross-Origin-Resource-Policy cross-origin;
   add_header Cross-Origin-Opener-Policy $coop;
   add_header Cross-Origin-Embedder-Policy require-corp;

   # any static assets loaded with "ver=" in their URL will be cached for a year
   if ($args ~ ver=) {
       set $cacheControl max-age=31536000;
   }
   if ($uri ~ ^/.*(\/|\.html)$) {
       set $cacheControl no-cache;
   }

   add_header Cache-Control $cacheControl;


   set $styleSrc   "'unsafe-inline' 'self' ${main_domain}";
   set $connectSrc "'self' https://${main_domain} ${main_domain} https://${api_domain} blob: wss://${api_domain} ${api_domain} ${files_domain}";
   set $fontSrc    "'self' data: ${main_domain}";
   set $imgSrc     "'self' data: * blob: ${main_domain}";
   set $frameSrc   "'self' ${sandbox_domain} blob:";
   set $mediaSrc   "'self' data: * blob: ${main_domain}";
   set $childSrc   "https://${main_domain}";
   set $workerSrc  "https://${main_domain}";
   set $scriptSrc  "'self' resource: ${main_domain}";

   set $unsafe 0;

   if ($uri = "/sheet/inner.html") { set $unsafe 1; }
   if ($uri ~ ^\/common\/onlyoffice\/.*\/index\.html.*$) { set $unsafe 1; }

   if ($host != $sandbox_domain) { set $unsafe 0; }

   if ($unsafe) {
       set $scriptSrc "'self' 'unsafe-eval' 'unsafe-inline' resource: ${main_domain}";
   }

   add_header Content-Security-Policy "default-src 'none'; child-src $childSrc; worker-src $workerSrc; media-src $mediaSrc; style-src $styleSrc; script-src $scriptSrc; connect-src $connectSrc; font-src $fontSrc; img-src $imgSrc; frame-src $frameSrc;";

   location ^~ /cryptpad_websocket {
      proxy_pass http://cryptpad_upstream;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

      # WebSocket support (nginx 1.4)
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection upgrade;
    }

   location / {
      proxy_pass         http://cryptpad_upstream;
      proxy_redirect     off;
      proxy_set_header   Host $host;
      proxy_set_header   X-Real-IP $remote_addr;
      proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header   X-Forwarded-Host $server_name;
      proxy_set_header   X-Forwarded-Proto $scheme;
      proxy_cache        off;
      client_max_body_size 200M;
      proxy_http_version 1.1;
      proxy_request_buffering off;
   }

   ssl_certificate     /etc/letsencrypt/live/ffmuc.net/fullchain.pem;
   ssl_certificate_key /etc/letsencrypt/live/ffmuc.net/privkey.pem;
   
   access_log /var/log/nginx/{{ domain }}_access.log json_normal;
   error_log  /var/log/nginx/{{ domain }}_error.log;
}
