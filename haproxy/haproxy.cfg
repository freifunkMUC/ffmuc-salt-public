global
    log /dev/log    len 8000 local0
    log /dev/log    len 8000 local1 notice

    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin
    stats socket /run/haproxy/api.sock mode 666 level user
    stats timeout 30s
    user haproxy
    group haproxy
    daemon

    # Default SSL material locations
    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private

    nbthread {{ grains.num_cpus }}

    # See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
    ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
    ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
    log     global
    mode    http
    option  dontlognull
    timeout connect 5000
    timeout client  50000
    timeout server  50000
    log-format '{"message":"%ci %[capture.req.hdr(0)] - %HM %HU - %ST","timestamp":"%t","http_host":"%[capture.req.hdr(0)]","port":"%fp","remote_addr":"%ci","remote_user":"","upstream_addr":"%si:%sp","upstream_cache_status":"","upstream_duration":"%Tt","http_request_method":"%HM","http_request_uri":"%[capture.req.hdr(2)]","http_uri":"%HU","http_params":"%HU","http_referer":"%[capture.req.hdr(1)]","http_user_agent":"%[capture.req.hdr(3)]","http_protocol_version":"%HV","response_status":"%ST","body_bytes_sent":"%B","ssl_protocol":"%[ssl_fc_protocol]","gzip_ratio":"","pid":%pid,"haproxy_frontend_type":"http","haproxy_process_concurrent_connections":%ac,"haproxy_frontend_concurrent_connections":%fc,"haproxy_backend_concurrent_connections":%bc,"haproxy_server_concurrent_connections":%sc,"haproxy_backend_queue":%bq,"haproxy_server_queue":%sq,"haproxy_client_request_send_time":%Tq,"haproxy_queue_wait_time":%Tw,"haproxy_server_wait_time":%Tc,"haproxy_server_response_send_time":%Tr,"response_time":%Td,"session_duration":%Tt,"request_termination_state":"%tsc","haproxy_server_connection_retries":%rc,"remote_port":%cp,"frontend_addr":"%fi","frontend_ssl_version":"%[ssl_fc_cipher]","frontend_ssl_ciphers":"%[ssl_fc_cipher]","haproxy_frontend_name":"%f","haproxy_backend_name":"%b","haproxy_server_name":"%s","request_size":%U}'

    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

frontend stats
    mode http
    bind 127.0.0.1:8404
    stats enable
    stats uri /stats
    stats refresh 10s
    stats admin if LOCALHOST

frontend http-in
    bind [::]:8880 v4v6

    # Redirect all HTTP requests to HTTPS preserving the hostname and URI
    #redirect scheme https code 301 if !{ ssl_fc }
    http-request set-header X-Forwarded-Proto http
    default_backend servers

crt-store
    crt-base /etc/letsencrypt/live
    key-base /etc/letsencrypt/live
    load crt "ffmuc.net/fullchain.pem" key "ffmuc.net/privkey.pem" alias "ffmuc.net"
    load crt "muenchen.freifunk.net/fullchain.pem" key "muenchen.freifunk.net/privkey.pem" alias "muenchen.freifunk.net"

frontend https-in
    bind :443     ssl crt "@/ffmuc.net" crt "@/muenchen.freifunk.net" alpn h2,http/1.1
    bind [::]:443 ssl crt "@/ffmuc.net" crt "@/muenchen.freifunk.net" alpn h2,http/1.1

    http-request set-header X-Forwarded-Proto https
    http-request set-header X-Forwarded-Host %[req.hdr(host)]:%[dst_port]
    http-request set-header X-Forwarded-For %[src]

    # Captures used by log-format: host at hdr(0), referer at hdr(1), path at hdr(2), user-agent at hdr(3)
    http-request capture req.hdr(Host) len 80
    http-request capture req.hdr(Referer) len 200
    http-request capture path len 200
    http-request capture req.hdr(User-Agent) len 300

    acl doh_host hdr(host) -i doh.ffmuc.net
    acl is_ipv4 src -m ip 0.0.0.0/0
    acl is_ipv6 src -m ip ::/0

    use_backend doh_backend_v4 if doh_host is_ipv4 { path /dns-query }
    use_backend doh_backend_v6 if doh_host is_ipv6 { path /dns-query }

    default_backend servers

backend servers
    server nginx 127.0.0.1:8843 ssl verify none maxconn 32

backend doh_backend_v4
    http-reuse aggressive
    server dnsdistv4 127.0.0.1:445 check proto h2

backend doh_backend_v6
    http-reuse aggressive
    server dnsdistv6 ::1:445 check proto h2
