global
    log /dev/log    local0
    log /dev/log    local1 notice

    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin
    stats timeout 30s
    user haproxy
    group haproxy
    daemon

    # Default SSL material locations
    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private

    nbthread {{ grains.num_cpus }}

    # See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
    ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
    ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
    log     global
    mode    http
    option  httplog
    option  dontlognull
    timeout connect 5000
    timeout client  50000
    timeout server  50000
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

frontend stats
    mode http
    bind 127.0.0.1:8404
    stats enable
    stats uri /stats
    stats refresh 10s
    stats admin if LOCALHOST

frontend http-in
    bind [::]:8880 v4v6

    # Redirect all HTTP requests to HTTPS preserving the hostname and URI
    #redirect scheme https code 301 if !{ ssl_fc }
    http-request set-header X-Forwarded-Proto http
    default_backend servers

crt-store
    crt-base /etc/letsencrypt/live
    key-base /etc/letsencrypt/live
    load crt "ffmuc.net/fullchain.pem" key "ffmuc.net/privkey.pem" alias "ffmuc.net"
    load crt "muenchen.freifunk.net/fullchain.pem" key "muenchen.freifunk.net/privkey.pem" alias "muenchen.freifunk.net"

frontend https-in
    bind :443     ssl crt "@/ffmuc.net" crt "@/muenchen.freifunk.net" alpn h2,http/1.1
    bind [::]:443 ssl crt "@/ffmuc.net" crt "@/muenchen.freifunk.net" alpn h2,http/1.1

    #http-request return status 429 if { hdr(host) -i doh.ffmuc.net } { req.fhdr(user-agent) str "facebookexternalhit/1.1 (+http://www.facebook.com/externalhit_uatext.php)" }

    http-request set-header X-Forwarded-Proto https
    http-request set-header X-Forwarded-Host %[req.hdr(host)]:%[dst_port]
    http-request set-header X-Forwarded-For %[src]

    http-request capture req.hdr(Host) len 20
    http-request capture req.hdr(User-Agent) len 100

    acl doh_host hdr(host) -i doh.ffmuc.net
    acl is_ipv4 src -m ip 0.0.0.0/0
    acl is_ipv6 src -m ip ::/0

    use_backend doh_backend_v4 if doh_host is_ipv4 { path /dns-query }
    use_backend doh_backend_v6 if doh_host is_ipv6 { path /dns-query }

    default_backend servers

backend servers
    server nginx 127.0.0.1:8843 ssl verify none maxconn 32

backend doh_backend_v4
    http-reuse aggressive
    server dnsdistv4 127.0.0.1:445 check proto h2

backend doh_backend_v6
    http-reuse aggressive
    server dnsdistv6 ::1:445 check proto h2
